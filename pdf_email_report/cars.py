#!/usr/bin/env python3

import json
import locale
import sys

import reports
import emails


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  best_sales = {"total_sales": 0}
  car_year_sales = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
    if item["total_sales"] > best_sales["total_sales"]:
      best_sales = item
    # TODO: also handle most popular car_year
    if not item["car"]["car_year"] in car_year_sales.keys():
      car_year_sales[item["car"]["car_year"]] = item["total_sales"]
    else:
      car_year_sales[item["car"]["car_year"]] += item["total_sales"]

    sales_by_year = car_year_sales.values()
    best_year_sales = max(sales_by_year)
    most_popular_year = max(car_year_sales, key=car_year_sales.get)

  summary = [
      "The {} generated the most revenue: ${}".format(
          format_car(max_revenue["car"]), max_revenue["revenue"]),
      "The {} had the most sales: {}".format(best_sales["car"]["car_model"], best_sales["total_sales"]),
      "The most popular year was {} with {} sales.".format(most_popular_year, best_year_sales),
    ]
  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  new_summary = '\n'.join(summary)
  print(new_summary)

  # TODO: turn this into a PDF report
  reports.generate('/tmp/cars.pdf', "Cars report", new_summary, cars_dict_to_table(data))
  # TODO: send the PDF report as an email attachment
  msg = emails.generate("automation@example.com", "student-04-e8789f0d1e8b@example.com",
                       "Sales summary for last month", new_summary, "/tmp/cars.pdf")
  emails.send(msg)


if __name__ == "__main__":
  main(sys.argv)
